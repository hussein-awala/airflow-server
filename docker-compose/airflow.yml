version: '3.8'
services:
    airflow-metadata:
        image: postgres:13
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow
        volumes:
            - airflow-db-data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "airflow" ]
            interval: 5s
            retries: 5
        restart: always
    airflow-scheduler:
        image: my-custom-airflow:${AIRFLOW_VERSION:-2.4.1}
        build:
            context: ../docker
            dockerfile: Dockerfile
            args:
                AIRFLOW_VERSION: ${AIRFLOW_VERSION:-2.4.1}
        command: scheduler
        healthcheck:
            test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always
        user: "${AIRFLOW_UID:-50000}:0"
        depends_on:
            airflow-metadata:
                condition: service_healthy
            airflow-init:
                condition: service_completed_successfully
        env_file:
            - airflow/airflow.env
        volumes:
            - ../dags:/opt/airflow/dags
            - ../logs:/opt/airflow/logs
    airflow-webserver:
        image: my-custom-airflow:${AIRFLOW_VERSION:-2.4.1}
        build:
            context: ../docker
            dockerfile: Dockerfile
            args:
                AIRFLOW_VERSION: ${AIRFLOW_VERSION:-2.4.1}
        command: webserver
        healthcheck:
            test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always
        user: "${AIRFLOW_UID:-50000}:0"
        depends_on:
            airflow-metadata:
                condition: service_healthy
            airflow-init:
                condition: service_completed_successfully
        env_file:
            - airflow/airflow.env
        volumes:
            - ../dags:/opt/airflow/dags
            - ../logs:/opt/airflow/logs
        ports:
            - "8080:8080"
    airflow-init:
        image: my-custom-airflow:${AIRFLOW_VERSION:-2.4.1}
        build:
            context: ../docker
            dockerfile: Dockerfile
            args:
                AIRFLOW_VERSION: ${AIRFLOW_VERSION:-2.4.1}
        entrypoint: /opt/airflow/scripts/entrypoint.sh
        user: "${AIRFLOW_UID:-50000}:0"
        depends_on:
            airflow-metadata:
                condition: service_healthy
        env_file:
            - airflow/airflow.env
        environment:
            _AIRFLOW_WWW_USER_USERNAME: airflow_user
            _AIRFLOW_WWW_USER_FIRSTNAME: Airflow
            _AIRFLOW_WWW_USER_LASTNME: Admin
            _AIRFLOW_WWW_USER_EMAIL: airflowadmin@example.com
            _AIRFLOW_WWW_USER_ROLE: Admin
            _AIRFLOW_WWW_USER_PASSWORD: airflow_password
        volumes:
            - ./airflow/scripts:/opt/airflow/scripts
volumes:
  airflow-db-data: {}
